一次循环，时间复杂度O（n）,击败了97%，全程双指针，加上之前保存的两个指针，一共四指针，搞懂中间的连接关系，很容易就能解决本题

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseBetween(self, head: ListNode, m: int, n: int) -> ListNode:
        if m==n:
            return head
        pre1=ListNode(-1)
        old=pre1
        pre1.next=head
        n-=m
        while m>1:
            pre1=pre1.next
            m-=1
        new=pre1.next
        pre1.next=None
        pre2=new
        fast_node=new.next
        while n:
            n-=1
            tmp=fast_node.next
            fast_node.next=new
            new=fast_node
            fast_node=tmp
        pre1.next=new
        pre2.next=fast_node
        return old.next
